<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="856" height="40">
	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			public var stmt:SQLStatement;
			public var employeeDataGrid:DoubleClickDataGrid;
			public var employeeData:ArrayCollection;
			public var tableInfoData:Array;
			
			private var dateRangeLow:Number;
			private var dateRangeHigh:Number;
			
			public function init():void
			{
				bindFilterCB();
				bindFilterDateCB();
			}
			
			
            private function bindFilterDateCB():void
            {
            	var a:Array = [{label:"年龄", data:"birth_date"},
            				   {label:"党龄", data:"politics_date"},
            				   {label:"任职年数", data:"start_date"},
            				   {label:"入社年数", data:"join_date"},
            				   {label:"参队年数", data:"enqueue_date"}];
        		filterDateCB.dataProvider = a;
            }
                        
            private function bindFilterCB():void
            {
            	var a:Array = new Array();
            	var o:Object;
				for (var i:int = 0, l:int = tableInfoData.length; i < l; i++) {
					if (tableInfoData[i].colvisible && tableInfoData[i].coltype != "DATE") {
            			o = new Object();
						o.label = tableInfoData[i].colname_cn;
						o.data = tableInfoData[i].colname;
						a.push(o);
					}
				}
				filterColCB.dataProvider = a;
            }
            
            
            private function filterDateBtnHandle(e:MouseEvent):void
            {
            	var range:String = filterDateTI.text;
            	if (range.indexOf("-") > -1) {
            		var a:Array = range.split("-");
            		dateRangeLow = Number(a[0]);
            		dateRangeHigh = Number(a[1]);
            	} else if (Number(range) >= 0) {
            		dateRangeLow = Number(range);
            		dateRangeHigh = 200;
            	} else {
            		Alert.show("格式错误");
            		return;
            	}
            	employeeData.filterFunction = filterDateFunction;
            	employeeData.refresh();
            }
            
            private function filterCombineBtnHandle(e:MouseEvent):void
            {
            	employeeData.filterFunction = filterCombineFunction;
            	employeeData.refresh();
            }
            
            private function filterCombineFunction (item:Object):Boolean
            {
            	return filterDateFunction(item) && filterFunction(item);
            }
            
			private function filterDateFunction (item:Object):Boolean
			{
				var colname:String = String(filterDateCB.value);
				var value:String = filterDateTI.text;
				var d:Date = new Date(item[colname]);
				var now:Date = new Date();
				var differ:int = now.getFullYear() - d.getFullYear();
				
				if (differ >= dateRangeLow && differ <= dateRangeHigh) {
					return true;
				} else {
					return false;
				}
				return true;
			}
            
            private function filterColCBHandle(e:ListEvent):void
            {
            	var colname:String = e.target.value;
            	
				stmt.text = "select distinct " + colname + " from employee";
				stmt.execute(); 
				var result = stmt.getResult().data;
				var resultArr = new Array();
				for( var j:int = 0; j < result.length; j++ ) {
					resultArr.push(result[j][colname]);
				}
				filterValueCB.dataProvider = resultArr;
            }
            
            private function filterBtnHandle(e:MouseEvent):void
            {
            	employeeData.filterFunction = filterFunction;
            	employeeData.refresh();
            }
            
			private function filterFunction (item:Object):Boolean
			{
				var colname:String = String(filterColCB.value);
				var value:String = filterValueCB.text;
				if (vagueSearchCheckBox.selected) {
					if (item[colname].indexOf(value) > -1) return true;
					else return false; 
				} else {
					if (item[colname] == value) return true;
					else return false; 
				}
			}
			
            public function filterAllHandle():void
            {
            	employeeData.filterFunction = function(){
            		return true;
            	};
            	employeeData.refresh();
            }
            
		]]> 
	</mx:Script>
	<mx:Button click="filterAllHandle()"  x="756" y="8" label="全部" fillAlphas="[1.0, 0.99, 1.0, 0.99]" height="24"/>
	<mx:Button click="filterBtnHandle(event)"  x="592" y="8" label="搜索"  height="24"/>
	<mx:ComboBox x="277" y="8" id="filterColCB" change="filterColCBHandle(event)" width="111" cornerRadius="0" height="24"></mx:ComboBox>
	<mx:ComboBox x="394" y="8" id="filterValueCB" editable="true" width="142" cornerRadius="0" themeColor="#C5C5C5" height="24"></mx:ComboBox>
	<mx:TextInput x="144" y="8" id="filterDateTI" width="52" height="24" alpha="1.0"></mx:TextInput>
	<mx:ComboBox x="46" y="8" id="filterDateCB" width="94" cornerRadius="0" height="24"></mx:ComboBox>
	<mx:Button click="filterDateBtnHandle(event)"  x="200" y="8" label="搜索" height="24"/>
	<mx:Button click="filterCombineBtnHandle(event)"  x="674" y="8" label="联合搜索"/>
	<mx:CheckBox x="541" y="9" label="模糊" fontSize="12" id="vagueSearchCheckBox" color="#DEDEDE"/>
</mx:Canvas>
